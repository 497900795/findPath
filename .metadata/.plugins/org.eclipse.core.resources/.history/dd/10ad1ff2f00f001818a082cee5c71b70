package findPath;
import java.util.Scanner;
public class Dijkstra {
	//常量
    private static int N = Integer.MAX_VALUE/2;
    private static int[][] Graph = {
        { 0, 1, 5, N, N, N, N, N, N },
        { 1, 0, 3, 7, 5, N, N, N, N },
        { 5, 3, 0, N, 1, 7, N, N, N },
        { N, 7, N, 0, 2, N, 3, N, N },
        { N, 5, 1, 2, 0, 3, 6, 9, N },
        { N, N, 7, N, 3, 0, N, 5, N },
        { N, N, N, 3, 6, N, 0, 2, 7 },
        { N, N, N, N, 9, 5, 2, 0, 4 },
        { N, N, N, N, N, N, 7, 4, 0 },
    };
    private static int NUM = Graph[0].length;
    
    //变量
    private static int start;
    private static int end;
    private static boolean flag[] = new boolean [NUM];
    private static int dist[]  = new int [NUM];
    private static boolean  path[][] = new boolean [NUM][NUM];
    
    public static void main(String[] args) {
    	init();
        dijkstra();
        showResult();
    }
    
    public static void dijkstra(){
    	int min,v=0;
    	for(int i = 1; i < NUM;i++){
    		min = Integer.MAX_VALUE;
    		for(int w = 0;w < NUM;w++){
    			if(!flag[w]){
    				if(dist[w] < min){
    					v = w;
    					min = dist[w];
    				}
    			}
    		}
    		flag[v] = true;
    		
    		for(int w = 0;w < NUM;w++){
    			if(!flag[w]&& (min + Graph[v][w]) < dist[w]){
    				dist[w] = min + Graph[v][w];
    				path[w] = path[v];
    				path[w][w] = true;
   			}
    		}//innerFor
    	}//outFor
    }
    
    public static void init(){
    	//确定开始结点
    	System.out.print("请输入开始结点:");
    	Scanner input=new Scanner(System.in);	
    	start = input.nextInt();
    	System.out.print("请输入目标结点:");
    	end = input.nextInt();
    	input.close();
    	//path初始化
    	for(int i = 0;i < NUM;i++){
    		flag[i] = false;
    		dist[i] = Graph[start][i];
    		for(int j = 0;j < NUM;j++){
    			path[i][j] = false;
    		}
    		if(dist[i] < N){
    			path[i][start] = true;
    			path[i][i] = true;
    		}
    	}
    	dist[start] = 0;
    	flag[start] = true;
    }
    
    public static void showResult(){
    	for(int i = 0;i < NUM;i++){
    		if(path[end][i]){
    			System.out.print(i + "->");
    		}	
    	}
    	System.out.print("\n");
    	System.out.println("距离:" + dist[end]);
    	for(int i = 0;i < NUM;i++){
    		System.out.println(dist[i] + ",");
    	}
    }
}